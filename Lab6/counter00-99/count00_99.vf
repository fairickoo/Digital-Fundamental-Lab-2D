////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : count00_99.vf
// /___/   /\     Timestamp : 10/04/2019 21:36:22
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/pasaw/Desktop/2D/Digital-Fundamental-Lab-2D/Lab6/counter00-99/count00_99.vf -w C:/Users/pasaw/Desktop/2D/Digital-Fundamental-Lab-2D/Lab6/counter00-99/count00_99.sch
//Design Name: count00_99
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 100 ps / 10 ps

module CB4CE_HXILINX_count00_99(CEO, Q0, Q1, Q2, Q3, TC, C, CE, CLR);
   
   localparam TERMINAL_COUNT = 4'b1111;
   
   output             CEO;
   output             Q0;
   output             Q1;
   output             Q2;
   output             Q3;
   output             TC;

   input 	      C;	
   input 	      CE;	
   input 	      CLR;	
   
   reg                Q0;
   reg                Q1;
   reg                Q2;
   reg                Q3;
   
   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  {Q3, Q2, Q1, Q0} <= 4'b0000;
	else if (CE)
	  {Q3, Q2, Q1,Q0} <= {Q3, Q2, Q1,Q0} + 1;
     end
   
   assign CEO = TC & CE;
   assign TC = ({Q3, Q2, Q1, Q0} == TERMINAL_COUNT);
   
endmodule
`timescale 1ns / 1ps

module count00_99(CLK, 
                  CLR, 
                  A_0, 
                  A_1, 
                  A_2, 
                  A_3, 
                  B_0, 
                  B_1, 
                  B_2, 
                  B_3);

    input CLK;
    input CLR;
   output A_0;
   output A_1;
   output A_2;
   output A_3;
   output B_0;
   output B_1;
   output B_2;
   output B_3;
   
   wire CEO;
   wire TC;
   wire XLXN_1;
   wire XLXN_16;
   
   (* HU_SET = "XLXI_1_2" *) 
   CB4CE_HXILINX_count00_99  XLXI_1 (.C(CLK), 
                                    .CE(XLXN_1), 
                                    .CLR(CLR), 
                                    .CEO(CEO), 
                                    .Q0(A_0), 
                                    .Q1(A_1), 
                                    .Q2(A_2), 
                                    .Q3(A_3), 
                                    .TC(TC));
   VCC  XLXI_2 (.P(XLXN_1));
   (* HU_SET = "XLXI_3_3" *) 
   CB4CE_HXILINX_count00_99  XLXI_3 (.C(CEO), 
                                    .CE(XLXN_1), 
                                    .CLR(XLXN_16), 
                                    .CEO(), 
                                    .Q0(B_0), 
                                    .Q1(B_1), 
                                    .Q2(B_2), 
                                    .Q3(B_3), 
                                    .TC());
endmodule
